# Generated by Django 5.2.5 on 2025-08-26 14:37

import banking.models.base
import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="BankAccount",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "account_link_id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        help_text="Unique identifier for external API calls",
                        unique=True,
                    ),
                ),
                ("bank_name", models.CharField(max_length=100)),
                ("bank_routing_number", models.CharField(max_length=9)),
                ("account_number_encrypted", models.BinaryField()),
                (
                    "account_type",
                    models.CharField(
                        choices=[("checking", "Checking"), ("savings", "Savings")],
                        max_length=10,
                    ),
                ),
                ("account_holder_name", models.CharField(max_length=100)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending_verification", "Pending Verification"),
                            ("verified", "Verified"),
                            ("suspended", "Suspended"),
                            ("closed", "Closed"),
                        ],
                        default="pending_verification",
                        max_length=20,
                    ),
                ),
                ("verification_attempts", models.IntegerField(default=0)),
                ("max_verification_attempts", models.IntegerField(default=3)),
                (
                    "micro_deposit_amount_1",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "micro_deposit_amount_2",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                ("micro_deposits_sent_at", models.DateTimeField(blank=True, null=True)),
                ("last_used_at", models.DateTimeField(blank=True, null=True)),
                (
                    "daily_deposit_limit",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("50000.00"),
                        max_digits=12,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                    ),
                ),
                (
                    "daily_withdrawal_limit",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("50000.00"),
                        max_digits=12,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="bank_accounts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Bank Account",
                "verbose_name_plural": "Bank Accounts",
                "db_table": "banking_bank_accounts",
            },
            bases=(models.Model, banking.models.base.EncryptionMixin),
        ),
        migrations.CreateModel(
            name="Transaction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "transaction_id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        help_text="Unique identifier for transaction tracking",
                        unique=True,
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("deposit", "Deposit"),
                            ("withdrawal", "Withdrawal"),
                            ("micro_deposit", "Micro Deposit"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=12,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                    ),
                ),
                ("currency", models.CharField(default="USD", max_length=3)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("processing", "Processing"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        max_length=15,
                    ),
                ),
                (
                    "ach_transaction_id",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "processor_reference",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("processed_at", models.DateTimeField(blank=True, null=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("estimated_completion_date", models.DateField(blank=True, null=True)),
                ("failure_reason", models.TextField(blank=True, null=True)),
                ("retry_count", models.IntegerField(default=0)),
                ("max_retries", models.IntegerField(default=3)),
                (
                    "description",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("internal_notes", models.TextField(blank=True, null=True)),
                (
                    "balance_before",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=15, null=True
                    ),
                ),
                (
                    "balance_after",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=15, null=True
                    ),
                ),
                (
                    "bank_account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="transactions",
                        to="banking.bankaccount",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="banking_transactions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Banking Transaction",
                "verbose_name_plural": "Banking Transactions",
                "db_table": "banking_transactions",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="UserBalance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "available_balance",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Balance available for withdrawals",
                        max_digits=15,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                    ),
                ),
                (
                    "pending_balance",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Balance pending from deposits",
                        max_digits=15,
                    ),
                ),
                (
                    "total_balance",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Total balance (available + pending)",
                        max_digits=15,
                    ),
                ),
                (
                    "daily_deposit_used",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=12
                    ),
                ),
                (
                    "daily_withdrawal_used",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=12
                    ),
                ),
                ("last_daily_reset", models.DateField(auto_now_add=True)),
                (
                    "max_daily_deposit",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("50000.00"), max_digits=12
                    ),
                ),
                (
                    "max_daily_withdrawal",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("50000.00"), max_digits=12
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="account_balance",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "User Balance",
                "verbose_name_plural": "User Balances",
                "db_table": "banking_user_balances",
            },
        ),
        migrations.AddIndex(
            model_name="bankaccount",
            index=models.Index(
                fields=["user", "status"], name="banking_ban_user_id_7e1215_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="bankaccount",
            index=models.Index(
                fields=["account_link_id"], name="banking_ban_account_377eda_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="bankaccount",
            index=models.Index(
                fields=["created_at"], name="banking_ban_created_658fd9_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="transaction",
            index=models.Index(
                fields=["user", "type"], name="banking_tra_user_id_238e7d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="transaction",
            index=models.Index(
                fields=["transaction_id"], name="banking_tra_transac_51f2db_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="transaction",
            index=models.Index(
                fields=["bank_account", "status"], name="banking_tra_bank_ac_8b7d18_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="transaction",
            index=models.Index(
                fields=["created_at"], name="banking_tra_created_8623c1_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="transaction",
            index=models.Index(
                fields=["status", "created_at"], name="banking_tra_status_badec4_idx"
            ),
        ),
    ]
