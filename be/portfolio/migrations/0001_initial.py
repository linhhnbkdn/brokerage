# Generated by Django 5.2.5 on 2025-08-28 01:31

import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PerformanceMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('metrics_id', models.UUIDField(db_index=True, default=uuid.uuid4, help_text='Unique identifier for metrics record', unique=True)),
                ('period', models.CharField(choices=[('1D', '1 Day'), ('1W', '1 Week'), ('1M', '1 Month'), ('3M', '3 Months'), ('6M', '6 Months'), ('1Y', '1 Year'), ('3Y', '3 Years'), ('5Y', '5 Years'), ('ALL', 'All Time')], max_length=5)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('calculated_at', models.DateTimeField(auto_now=True)),
                ('total_return', models.DecimalField(decimal_places=4, help_text='Total return percentage for period', max_digits=8)),
                ('annualized_return', models.DecimalField(blank=True, decimal_places=4, help_text='Annualized return percentage', max_digits=8, null=True)),
                ('time_weighted_return', models.DecimalField(blank=True, decimal_places=4, help_text='Time-weighted return percentage', max_digits=8, null=True)),
                ('volatility', models.DecimalField(blank=True, decimal_places=4, help_text='Portfolio volatility (standard deviation)', max_digits=8, null=True)),
                ('sharpe_ratio', models.DecimalField(blank=True, decimal_places=4, help_text='Risk-adjusted return ratio', max_digits=8, null=True)),
                ('max_drawdown', models.DecimalField(blank=True, decimal_places=4, help_text='Maximum drawdown percentage', max_digits=8, null=True)),
                ('benchmark_return', models.DecimalField(blank=True, decimal_places=4, help_text='Benchmark return for same period', max_digits=8, null=True)),
                ('alpha', models.DecimalField(blank=True, decimal_places=4, help_text='Alpha vs benchmark', max_digits=8, null=True)),
                ('beta', models.DecimalField(blank=True, decimal_places=4, help_text='Beta vs benchmark', max_digits=8, null=True)),
                ('starting_value', models.DecimalField(decimal_places=2, help_text='Portfolio value at start of period', max_digits=18)),
                ('ending_value', models.DecimalField(decimal_places=2, help_text='Portfolio value at end of period', max_digits=18)),
                ('peak_value', models.DecimalField(blank=True, decimal_places=2, help_text='Peak portfolio value during period', max_digits=18, null=True)),
                ('trading_days', models.IntegerField(default=0, help_text='Number of trading days in period')),
                ('number_of_trades', models.IntegerField(default=0, help_text='Number of trades executed in period')),
                ('calculation_notes', models.TextField(blank=True, help_text='Notes about calculation methodology', null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='portfolio_metrics', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Performance Metrics',
                'verbose_name_plural': 'Performance Metrics',
                'db_table': 'portfolio_performance_metrics',
                'ordering': ['-calculated_at', 'period'],
                'indexes': [models.Index(fields=['user', 'period'], name='portfolio_p_user_id_22431a_idx'), models.Index(fields=['period', 'calculated_at'], name='portfolio_p_period_c17a85_idx'), models.Index(fields=['user', '-calculated_at'], name='portfolio_p_user_id_d38a06_idx')],
                'unique_together': {('user', 'period', 'start_date', 'end_date')},
            },
        ),
        migrations.CreateModel(
            name='PortfolioSnapshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('snapshot_id', models.UUIDField(db_index=True, default=uuid.uuid4, help_text='Unique identifier for snapshot', unique=True)),
                ('snapshot_date', models.DateField(db_index=True)),
                ('snapshot_time', models.DateTimeField(auto_now_add=True)),
                ('total_value', models.DecimalField(decimal_places=2, help_text='Total portfolio market value', max_digits=18)),
                ('cash_balance', models.DecimalField(decimal_places=2, help_text='Cash available in account', max_digits=15)),
                ('total_cost_basis', models.DecimalField(decimal_places=2, help_text='Total cost basis of all positions', max_digits=18)),
                ('day_gain_loss', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Gain/loss for the day', max_digits=15)),
                ('day_gain_loss_percent', models.DecimalField(decimal_places=4, default=Decimal('0.0000'), help_text='Daily gain/loss percentage', max_digits=8)),
                ('total_gain_loss', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total unrealized gain/loss', max_digits=15)),
                ('total_gain_loss_percent', models.DecimalField(decimal_places=4, default=Decimal('0.0000'), help_text='Total gain/loss percentage', max_digits=8)),
                ('holdings_data', models.JSONField(default=dict, help_text='Detailed holdings data for this snapshot')),
                ('market_indexes', models.JSONField(default=dict, help_text='Market index values for comparison')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='portfolio_snapshots', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Portfolio Snapshot',
                'verbose_name_plural': 'Portfolio Snapshots',
                'db_table': 'portfolio_snapshots',
                'ordering': ['-snapshot_date', '-snapshot_time'],
                'indexes': [models.Index(fields=['user', 'snapshot_date'], name='portfolio_s_user_id_8002d9_idx'), models.Index(fields=['snapshot_date'], name='portfolio_s_snapsho_ed5790_idx'), models.Index(fields=['user', '-snapshot_date'], name='portfolio_s_user_id_c3a4a8_idx')],
                'unique_together': {('user', 'snapshot_date')},
            },
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('position_id', models.UUIDField(db_index=True, default=uuid.uuid4, help_text='Unique identifier for position tracking', unique=True)),
                ('symbol', models.CharField(db_index=True, max_length=20)),
                ('instrument_type', models.CharField(choices=[('stock', 'Stock'), ('bond', 'Bond'), ('crypto', 'Cryptocurrency'), ('etf', 'Exchange Traded Fund'), ('mutual_fund', 'Mutual Fund'), ('option', 'Option'), ('future', 'Future')], max_length=20)),
                ('name', models.CharField(help_text='Full name of the instrument', max_length=255)),
                ('quantity', models.DecimalField(decimal_places=8, help_text='Current quantity held', max_digits=18, validators=[django.core.validators.MinValueValidator(Decimal('1E-8'))])),
                ('average_cost', models.DecimalField(decimal_places=4, help_text='Average cost basis per share/unit', max_digits=12)),
                ('current_price', models.DecimalField(decimal_places=4, default=Decimal('0.0000'), help_text='Latest market price', max_digits=12)),
                ('status', models.CharField(choices=[('active', 'Active'), ('closed', 'Closed'), ('suspended', 'Suspended')], default='active', max_length=15)),
                ('opened_at', models.DateTimeField(auto_now_add=True)),
                ('closed_at', models.DateTimeField(blank=True, null=True)),
                ('last_price_update', models.DateTimeField(blank=True, null=True)),
                ('total_dividends', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='portfolio_positions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Portfolio Position',
                'verbose_name_plural': 'Portfolio Positions',
                'db_table': 'portfolio_positions',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', 'status'], name='portfolio_p_user_id_bc60ff_idx'), models.Index(fields=['symbol', 'instrument_type'], name='portfolio_p_symbol_cbe499_idx'), models.Index(fields=['position_id'], name='portfolio_p_positio_97b56f_idx'), models.Index(fields=['created_at'], name='portfolio_p_created_efcb3b_idx')],
                'unique_together': {('user', 'symbol', 'status')},
            },
        ),
    ]
