sequenceDiagram
    participant FE as Frontend
    participant API as Django API

    Note over FE, API: JWT Authentication Flow

    Note over FE, API: 1. User Registration
    FE->>+API: POST /api/auth/register
    Note right of FE: { email, password, firstName, lastName }

    API->>API: validate_user_data()
    API->>API: create_user()
    API->>API: generate_jwt_tokens(user_id)
    Note right of API: Create access_token (15min)<br/>Create refresh_token (7days)<br/>Store refresh_token in cache

    API-->>-FE: 201 Created
    Note left of API: { access_token, refresh_token }

    FE->>FE: store_tokens_securely()

    Note over FE, API: 2. User Login
    FE->>+API: POST /api/auth/login
    Note right of FE: { email, password }

    API->>API: authenticate_user()
    API->>API: generate_jwt_tokens(user_id)
    Note right of API: Verify credentials<br/>Create fresh JWT tokens<br/>Cache refresh_token

    API-->>-FE: 200 OK
    Note left of API: { access_token, refresh_token }

    FE->>FE: store_tokens_securely()

    Note over FE, API: 3. Authenticated API Request
    FE->>+API: GET /api/brokerage/portfolio
    Note right of FE: Authorization: Bearer <access_token>

    API->>API: validate_access_token()
    Note right of API: Verify JWT signature<br/>Check expiration<br/>Extract user_id

    alt Valid Token
        API->>API: process_request(user_id)
        API-->>FE: 200 OK
        Note left of API: { portfolio_data }
    else Token Expired
        API-->>FE: 401 Unauthorized
        Note left of API: { error: "token_expired" }
    end
    deactivate API

    Note over FE, API: Token Refresh Flow
    FE->>+API: POST /api/auth/refresh
    Note right of FE: { refresh_token }

    API->>API: validate_refresh_token()
    Note right of API: Verify refresh_token<br/>Check not revoked<br/>Extract user_id

    alt Valid Refresh Token
        API->>API: generate_new_jwt_tokens(user_id)
        Note right of API: Create new access_token<br/>Create new refresh_token<br/>Revoke old refresh_token

        API-->>FE: 200 OK
        Note left of API: { access_token, refresh_token }

        FE->>FE: store_new_tokens()
        FE->>API: Retry Original Request
        Note right of FE: Authorization: Bearer <new_access_token>
        API-->>FE: 200 OK
    else Invalid Refresh Token
        API-->>FE: 401 Unauthorized
        FE->>FE: redirect_to_login()
    end
    deactivate API

    Note over FE, API: 4. User Logout
    FE->>+API: POST /api/auth/logout
    Note right of FE: { refresh_token }

    API->>API: revoke_refresh_token()
    Note right of API: Remove from cache<br/>Invalidate refresh_token

    API-->>-FE: 200 OK
    FE->>FE: clear_stored_tokens()

    Note over FE, API: JWT Token Details
    rect rgb(240, 248, 255)
        Note over API: Access Token (15 minutes)<br/>Header: { "alg": "HS256", "typ": "JWT" }<br/>Payload: { "user_id": 123, "exp": timestamp }<br/>Used for API authentication
    end

    rect rgb(248, 255, 240)
        Note over API: Refresh Token (7 days)<br/>Header: { "alg": "HS256", "typ": "JWT" }<br/>Payload: { "user_id": 123, "jti": "uuid", "exp": timestamp }<br/>Used for token renewal
    end
